name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: ["8.1", "8.2", "8.3"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pdo, pdo_sqlite, mbstring, xml, curl, json
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Install dev dependencies
        run: composer install --dev

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --coverage-clover coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: pdo, pdo_sqlite, mbstring, xml, curl, json

      - name: Install dependencies
        run: composer install --dev

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse app/ --level=8 --no-progress

      - name: Run CodeSniffer
        run: vendor/bin/phpcs --standard=PSR12 app/ --report=checkstyle --report-file=phpcs-report.xml

      - name: Upload CodeSniffer results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: phpcs-report
          path: phpcs-report.xml

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: pdo, pdo_sqlite, mbstring, xml, curl, json

      - name: Install dependencies
        run: composer install --dev

      - name: Run security audit
        run: composer audit

      - name: Check for known vulnerabilities
        run: |
          if command -v security-checker &> /dev/null; then
            security-checker security:check composer.lock
          else
            echo "Security checker not available, skipping..."
          fi

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [test, code-quality, security]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: pdo, pdo_sqlite, mbstring, xml, curl, json

      - name: Install dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Create build artifact
        run: |
          tar -czf application.tar.gz \
            --exclude='.git' \
            --exclude='tests' \
            --exclude='.github' \
            --exclude='composer.json' \
            --exclude='composer.lock' \
            --exclude='phpunit.xml' \
            --exclude='.gitignore' \
            .

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: application-build
          path: application.tar.gz
          retention-days: 30
